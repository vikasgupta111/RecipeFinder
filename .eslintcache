[{"D:\\reactbasics\\recipefinder\\src\\index.js":"1","D:\\reactbasics\\recipefinder\\src\\App.js":"2","D:\\reactbasics\\recipefinder\\src\\reportWebVitals.js":"3","D:\\reactbasics\\recipefinder\\src\\component\\RecipeHome.js":"4"},{"size":500,"mtime":499162500000,"results":"5","hashOfConfig":"6"},{"size":182,"mtime":1612286212496,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"6"},{"size":3070,"mtime":1612421756631,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"7nkt5q",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},"D:\\reactbasics\\recipefinder\\src\\index.js",[],["20","21"],"D:\\reactbasics\\recipefinder\\src\\App.js",[],"D:\\reactbasics\\recipefinder\\src\\reportWebVitals.js",[],"D:\\reactbasics\\recipefinder\\src\\component\\RecipeHome.js",["22"],"import React from 'react'\r\nimport { useState, useEffect } from 'react'\r\nimport \"../App.css\";\r\n\r\nexport default function RecipeHome() {\r\n    const initialValue = \"Chicken\"\r\n    const [query, setQuery] = useState(initialValue);\r\n    const [recipes, setRecipes] = useState([]);\r\n    const [newValue, setNewValue] = useState(query)\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(false);\r\n    const APP_ID = 'f5fcd204';\r\n    const APP_KEY = '966b4fd01c59fc7a925b6a7475b9d5bf';\r\n\r\n    useEffect(() => {\r\n        setLoading(true)\r\n        setQuery(\"\")\r\n        fetch(`https://api.edamam.com/search?q=${newValue}&app_id=${APP_ID}&app_key=${APP_KEY}`)\r\n            .then(res => {\r\n                return res.json()\r\n            })\r\n            .then(result => {\r\n                setLoading(false)\r\n                result.hits.length !== 0 ?\r\n                    setRecipes(result.hits) : setRecipes([]) && setError(true);\r\n            }).catch(err => {\r\n                setLoading(false)\r\n                setError(true)\r\n            })\r\n\r\n    }, [newValue])\r\n\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <div className=\"App-header\">\r\n                    <h1>Food Recipe Finder</h1>\r\n                <div className=\"InputWrapper\">\r\n                    <input placeholder=\"Search For Recipe\" value={query} onChange={(e) => { setQuery(e.target.value) }} />\r\n                    <button onClick={() => { setNewValue(query) }}>Search</button>\r\n                </div>\r\n                {loading && <p>...Loading</p>}\r\n                <div className=\"Wrapper\">\r\n                    {recipes.map((item, ind) => {\r\n                        return (\r\n                            <div className=\"Ingredient\" key={ind}>\r\n\r\n                                <span>{item.recipe.label}</span>\r\n                                <img src={item.recipe.image} alt=\"\"></img>\r\n                                <div className=\"steps\">\r\n                                    {item.recipe.ingredientLines.map((step, index) => {\r\n                                        return <p key={index}>{step}</p>\r\n                                    })}\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n// {<div>\r\n\r\n\r\n//     <input type = \"text\" placeholder = \"Enter food recipe name to be Searched\" onChange = { (e)=>{setQuery(e.target.value)}}></input>\r\n//     <button onClick = {()=>{setNewValue(query)}}>Search</button>\r\n//     <div>\r\n//     {loading ? \"...loading\": \r\n//     <div className=\"recipes\">\r\n//     <ul>\r\n//         {recipes.length !== 0 && recipes.map((item,ind)=>{\r\n//             return (\r\n//                 <div className =\"Ingredient\">\r\n//                 <img src = {item.recipe.image} alt =\"\"></img>\r\n//                 <li key = {ind}>{item.recipe.label}</li>\r\n//                 </div>\r\n//             )\r\n//         })}\r\n//     </ul>\r\n//     </div>}\r\n//     </div>\r\n\r\n// </div>}",{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","severity":1,"message":"28","line":11,"column":12,"nodeType":"29","messageId":"30","endLine":11,"endColumn":17},"no-native-reassign",["31"],"no-negated-in-lhs",["32"],"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]